type Dentist
@model {
  id: ID!
  firstName: String
  lastName: String
  phone: String
  qualifications: String
  bio: String
  website: String
  city: String
  street: String
  postIndex: String
  email: String
  lat: String
  lng: String
  registered: Boolean
  customerID: String
  paymentMethodID: String
  subscriptionID: String
  hasPaidPlan: Boolean
  services: [Service] @connection(keyName: "byDentist", fields: ["id"])
  locations: [Location] @connection(keyName: "byDentist", fields: ["id"])
  images: [Image] @connection(keyName: "byDentist", fields: ["id"])
}

type Service
@model
@key(name: "byDentist", fields: ["dentistId", "name"])
@auth(rules: [{ allow: owner, ownerField: "owner", operations: [create, update, delete] }]) {
  id: ID!
  dentistId: ID!
  name: String!
}

type Location
@model
@key(name: "byDentist", fields: ["dentistId", "city", "address", "postCode"])
@auth(rules: [{ allow: owner, ownerField: "owner", operations: [create, update, delete] }]) {
  id: ID!
  dentistId: ID!
  city: String!
  address: String!
  postCode: String!
}

type ServiceForDental
@model
@auth(rules: [{ allow: owner, ownerField: "owner", operations: [create, update, delete] }]) {
  id: ID!
  name: String!
}

type Image
@model
@key(name: "byDentist", fields: ["dentistId", "titleBefore", "tagsBefore", "titleAfter", "tagsAfter", "service", "nameBefore", "nameAfter"])
@auth(rules: [{ allow: owner, ownerField: "owner", operations: [create, update, delete] }]) {
  id: ID!
  dentistId: ID!
  titleBefore: String!
  tagsBefore: String!
  titleAfter: String!
  tagsAfter: String!
  service: String!
  nameBefore: String!
  nameAfter: String!
}